#!/usr/bin/env bash

set -euo pipefail

# current_dir=$(dirname $(readlink -f ${BASH_SOURCE[0]}))

# export DISK="/dev/sda"

if lsblk | grep nvme0n1; then
  export DISK="/dev/nvme0n1"
  export DISK_PARTITION_SUFFIX="p"
else
  export DISK="/dev/sda"
  export DISK_PARTITION_SUFFIX=""
fi

echo "Disk: ${DISK}"

export PART_EFI="${DISK}${DISK_PARTITION_SUFFIX}1"
export PART_LUKS_LVM="${DISK}${DISK_PARTITION_SUFFIX}2"

export VG="vg0"
export LV_ROOT="lv_root"


echo "/ size: $LV_ROOT_SIZE"
echo "/var size: $LV_VAR_SIZE"
echo "/home size: $LV_HOME_SIZE"

export PART_ROOT="/dev/${VG}/${LV_ROOT}"
export PART_VAR="/dev/${VG}/${LV_VAR}"
export PART_HOME="/dev/${VG}/${LV_HOME}"

export CONSOLE_FONT="ter-m32n.psf.gz"
export CONSOLE_FONT_PATH="/usr/share/kbd/consolefonts/$CONSOLE_FONT"

devicelist=$(lsblk -dplnx size -o name,size | grep -Ev "boot|rpmb|loop" | tac)
DEVICE=$(dialog --stdout --menu "Select installation disk" 0 0 0 "${devicelist}") || exit 1
export DEVICE
clear
: "${DEVICE:?"device cannot be empty"}"

echo "DIALOG DEVICE: #{device}"
read -r foo

export foo

# @@ setup logging
exec 1> >(tee "stdout.log")
exec 2> >(tee "stderr.log")

# @@ warm up pacman
pacman -Syyy

# TODO: network connection

# @@ set console font

pacman -S --noconfirm terminus-font

setfont "$CONSOLE_FONT_PATH"

# @@ update system time/date

timedatectl set-ntp true

# @@ create partitions

shred -v -n1 "$DISK"

sgdisk --zap-all "$DISK"

parted -s "$DISK" -- \
  mklabel gpt \
  mkpart primary 0% 512MiB \
  mkpart primary 512MiB 100% \
  set 1 esp on

# @@ format partitions

mkfs.fat -F32 "${PART_EFI}"

modprobe dm-crypt

cryptsetup luksFormat "${PART_LUKS_LVM}"
cryptsetup open --type luks "${PART_LUKS_LVM}" lvm-on-luks

# @@ setup lvm

pvcreate --dataalignment 1m /dev/mapper/lvm-on-luks
vgcreate "$VG" /dev/mapper/lvm-on-luks
lvcreate -L "${LV_ROOT_SIZE}" "$VG" --name "${LV_ROOT}"
lvcreate -L "${LV_VAR_SIZE}"  "$VG" --name "${LV_VAR}"

mkfs.ext4 "${PART_ROOT}"
mkfs.ext4 "${PART_VAR}"
mkfs.ext4 "${PART_HOME}"

# @@ mount partitions

mount "/dev/${VG}/${LV_ROOT}" /mnt

mkdir /mnt/boot
mkdir /mnt/var
mkdir /mnt/home

mount "${PART_EFI}" /mnt/boot
mount "${PART_VAR}" /mnt/var
mount "${PART_HOME}" /mnt/home

# @@ install packages

pacstrap -i /mnt \
  base \
  base-devel \
  dhcpcd \
  dialog \
  dosfstools \
  efibootmgr \
  git \
  gnome \
  grub \
  linux \
  linux-headers \
  linux-lts \
  linux-lts-headers \
  linux-firmware \
  lvm2 \
  man-db \
  man-pages \
  mtools \
  openssh \
  os-prober \
  sudo \
  vim \
  networkmanager  \
  networkmanager-openvpn \
  network-manager-applet \
  wireless_tools \
  wpa_supplicant \
  wpa_actiond \

# @@ generate fstab

genfstab -U -p /mnt >> /mnt/etc/fstab

# @@ create swap file

fallocate -l 2G /mnt/swapfile
chmod 600 /mnt/swapfile
mkswap /mnt/swapfile
echo '/swapfile non swap sw 0 0' | tee -a /mnt/etc/fstab

# @@ chroot

cp "${current_dir}/arch-post-chroot" /mnt/root/arch-post-chroot

arch-chroot /mnt /root/arch-post-chroot

rm /mnt/root/setup-chroot

# @@ wrap up

# umount -R /mnt

echo 'Installation finished.'
