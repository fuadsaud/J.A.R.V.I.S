#!/usr/bin/env bash

set -euxo pipefail

current_dir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"

source "${current_dir}/../lib/utils.sh"

houdini_dir="${HOME}/.houdini"

function os_post_install {
  local os_post_install_script
  os_post_install_script=$(case-linux-mac "${current_dir}/linux-post-install" "${current_dir}/mac-post-install")

  "$os_post_install_script"
}

function setup_ruby {
  ruby-install -s /tmp/ruby-src ruby
}

function setup_python {
  local python_packages=(
    virtualenv
    virtualenvwrapper
    powerline-status
    psutil
    speedtest-cli
    doge
    neovim
  )

  pip3 install --user --upgrade pip setuptools
  pip3 install --user "${python_packages[@]}"
}

function setup_personal_src_dir {
  local src_dir="${HOME}/Sources"
  local personal_src_dir="${src_dir}/fuadsaud"

  mkdir -p "${personal_src_dir}"

  lns-once "${houdini_dir}" "${personal_src_dir}/houdini"

  if [[ ! -d "$personal_src_dir/qmk_firmware" ]]; then
    git clone https://github.com/fuadsaud/qmk_firmware.git "$personal_src_dir/qmk_firmware"
  fi
}

function setup_houdini {
  local houdini_repo_url="https://github.com/fuadsaud/houdini"

  rm -rf "${houdini_dir}" "${HOME}/.*"

  git clone --recurse-submodules -j8 "${houdini_repo_url}" "${houdini_dir}"

  "${houdini_dir}/stow/assorted-scripts/.local/bin/hstow" --overwrite '.*'
}

function setup_vim {
  curl -fLo "${HOME}/.vim/autoload/plug.vim" --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

  vim +PlugInstall +qall
}

function setup_neovim {
  curl -fLo "${HOME}/.local/share/nvim/site/autoload/plug.vim" --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

  nvim +PlugInstall +qall
}

os_post_install
setup_houdini
setup_python
setup_ruby
setup_personal_src_dir
setup_vim
setup_neovim

log 'post installation finished'
